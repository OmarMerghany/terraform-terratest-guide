name: Test and deploy Terraform app

on:
  push:
    branches:
      - main
      - cloudrun-module

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  GITHUB_RUN_NUMBER: ${{ github.run_number }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.REGION }}

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
      
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.1'

      - name: Build Terratest
        run: |
          cd test
          go mod init github.com/OmarMerghany/terraform-terratest-guide
          go mod tidy

      # - name: Terraform Init
      #   run: cd examples && terraform init

      # - name: Terraform Validate
      #   run: cd examples && terraform validate

      # - name: Terraform Plan
      #   id: plan
        # run: cd examples && terraform plan -out=tfplan

      - name: Run Terratest
        env:
          SERVICE_NAME: "example-service"
          GCP_PROJECT_ID: $GCP_PROJECT_ID
          REGION: $REGION
          CRED: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > key.json
          export GOOGLE_APPLICATION_CREDENTIALS=key.json
          export GCP_PROJECT_ID=$GCP_PROJECT_ID
          cd test && -test.v -test.timeout 30m

      # - name: Run tests
      #   run: |
      #     echo "$GOOGLE_APPLICATION_CREDENTIALS" > key.json
      #     export GOOGLE_APPLICATION_CREDENTIALS=key.json
      #     export GCP_PROJECT_ID=$GCP_PROJECT_ID
      #     cp test/terraform_test.py terraform_test.py 
      #     python terraform_test.py
